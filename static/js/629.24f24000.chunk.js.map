{"version":3,"file":"static/js/629.24f24000.chunk.js","mappings":"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","sources":["components/problem/SearchResultComponent.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {CustomBanner, CustomBannerAside, CustomBannerBox, CustomBannerBtn} from \"../../Global.style\";\nimport {Link, useNavigate, useParams, useSearchParams} from \"react-router-dom\";\nimport problemService from \"../../service/ProblemService\";\nimport {ProblemListType} from \"../../types/ProblemTypes\";\nimport {message} from \"antd\";\nimport memberRepository from \"../../repository/MemberRepository\";\n\n\nfunction SearchResultComponent() {\n    const navigate = useNavigate();\n    // 쿼리 파라미터\n    const {category,pageNum} = useParams();\n    const [serverData, setServerData] = useState<ProblemListType>();\n    const [searchText, setSearchText] = useState<string>(\"\");\n    // 과목 배너 바꾸는 쿼리\n    const [searchParams, setSearchParams] = useSearchParams();\n    const ST = searchParams.get(\"searchText\")\n    let subjectTitle : string = ST+\" 에 대한 검색 결과\"\n    const [searchCheck, setSearchCheck] = useState<boolean>(true);\n    const [messageApi, contextHolder] = message.useMessage();\n    const error = (content:string) => {\n        messageApi.open({\n            type: 'error',\n            content: `${content}`,\n            duration : 1,\n        });\n    };\n    useEffect(() => {\n        if (typeof ST ===\"string\"){\n            setSearchText(ST);\n            problemService.search(ST,pageNum).then(response=>{\n                let copy = {...response}\n                setServerData(copy)\n            })\n        }\n    }, [category,pageNum]);\n    const moveToPost = () => {\n        const loginCheck = memberRepository.getLoginCheck()\n        if (!loginCheck){\n            error(\"로그인이 필요한 서비스입니다\")\n        } else {\n            navigate(`/problems/write?category=${category}`)\n        }\n    }\n    const handleSearch = () => {\n        problemService.search(searchText, pageNum).then((response)=>{\n            let copy = {...response}\n            setServerData(copy)\n            setSearchCheck(false)\n        })\n    }\n    return (\n        <WhiteBg>\n            {contextHolder}\n            <CustomBannerBox>\n                <CustomBanner>\n                    <Link to={\"/\"}><small>HOME</small></Link><br/><br/><br/>\n                    <p style={{fontSize:\"25px\"}}>{subjectTitle}</p>\n                </CustomBanner>\n                <CustomBannerAside>\n                    <CustomBannerBtn onClick={moveToPost}>\n                        문제 등록하기\n                    </CustomBannerBtn>\n                </CustomBannerAside>\n            </CustomBannerBox>\n            <SearchBox>\n                <SearchInput name={\"searchText\"} value={searchText} onChange={(e:any)=>setSearchText(e.target.value)} placeholder={\"게시물 제목 검색\"}/>\n                <SearchBtn onClick={handleSearch}>검색</SearchBtn>\n            </SearchBox>\n            <GreyBg>\n                {\n                    serverData && serverData.problemList.map((item:any,i:number)=>{\n                        return (\n                            <ListBox key={i}>\n                                <ListLink onClick={()=>{\n                                    navigate(`../detail/${item.problemId}/?commentPage=1`)\n                                }}>{item.title}</ListLink>\n                                <ListP>{item.price}C</ListP>\n                            </ListBox>\n                        )\n                    })\n                }\n            </GreyBg>\n            <PageNationBox>\n                {\n                    serverData && serverData.next > 11 ?\n                        <PageBtn onClick={()=>navigate(`../${serverData?.prev}/?searchText=${searchText}`)}>이전</PageBtn>\n                        :<></>\n                }\n                {\n                    serverData && serverData.numList.map((item:number,i)=>{\n                        return (\n                            <PageBtn key={i} onClick={()=>{\n                                navigate(`../${item}/?searchText=${searchText}`)\n                            }}>{item}</PageBtn>\n                        )\n                    })\n                }\n                {\n                    // 이전\n                    serverData && serverData.start > 0  ?\n                        <PageBtn onClick={()=>navigate(`../${serverData?.next}/?searchText=${searchText}`)}>다음</PageBtn> :<></>\n                }\n            </PageNationBox>\n        </WhiteBg>\n    );\n}\nexport const ListBox = styled.div`\n    padding: 10px;\n    border-bottom: 1px solid rgb(255, 255, 255);\n`\nexport const ListLink = styled.p`\n    font-size: 16px;\n    font-weight: 550;\n    margin: 5px;\n    text-decoration: none;\n    color: #333;\n    cursor: pointer;\n`\nexport const ListP = styled.p`\n    font-size: 13px;\n    margin: 5px;\n    color: grey;\n`\nexport const WhiteBg = styled.div`\n    background-color: #fff;\n    width: 100%;\n    height: 100%;\n`\nexport const GreyBg = styled.div`\n    //background-color: #fff;\n    background-color: rgb(241, 241, 241);\n    width: 90%;\n    margin: 20px auto;\n    border-radius: 5px;\n`\nconst SearchBox = styled.div`\n    width: 90%;\n    display: flex;\n    margin: 20px auto;\n    height: 80px;\n`\nconst SearchInput = styled.input`\n    width: 150px;\n    padding: 5px 10px;\n    height: 30px;\n    border: solid 1px rgb(225, 225, 225);\n    color: rgb(161, 161, 161);\n    margin-left: 10px;\n    &:focus {\n        outline: none;\n    }\n`\nconst SearchBtn = styled.button`\n    width: 80px;\n    height: 40px;\n    margin-top: 1px;\n    margin-left: 20px;\n    border: solid 2px rgb(69,136,245);;\n    background-color: transparent;\n    color: rgb(69,136,245);;\n    font-size: 14px;\n    font-weight: 500;\n    transition: all 0.3s;\n    border-radius: 3px;\n    cursor: pointer;\n    &:hover {\n        background-color: rgb(69,136,245);\n        color: #fff;\n    }\n`\nexport const PageBtn = styled.button`\n    width: 30px;\n    height: 30px;\n    font-weight: 550;\n    border: solid 2px rgb(69,136,245);;\n    background-color: transparent;\n    color: rgb(69,136,245);\n    margin: 0 5px;\n    cursor: pointer;\n    &:hover {\n        background-color: rgb(69,136,245);\n        color: #fff;\n    }\n`\nexport const PageNationBox = styled.div`\n    width: 80%;\n    height: 40px;\n    margin: 80px auto;\n    display: flex;\n    justify-content: end;\n`\nexport default SearchResultComponent;"],"names":["ListBox","styled","div","_templateObject","_taggedTemplateLiteral","ListLink","p","_templateObject2","ListP","_templateObject3","WhiteBg","_templateObject4","GreyBg","_templateObject5","SearchBox","_templateObject6","SearchInput","input","_templateObject7","SearchBtn","button","_templateObject8","PageBtn","_templateObject9","PageNationBox","_templateObject10","navigate","useNavigate","category","pageNum","useParams","serverData","setServerData","useState","searchText","setSearchText","searchParams","setSearchParams","useSearchParams","ST","get","subjectTitle","searchCheck","setSearchCheck","messageApi","contextHolder","message","useMessage","useEffect","problemService","search","then","response","copy","_jsxs","children","CustomBannerBox","CustomBanner","_jsx","Link","to","style","fontSize","CustomBannerAside","CustomBannerBtn","onClick","moveToPost","content","memberRepository","getLoginCheck","concat","open","type","duration","name","value","onChange","e","target","placeholder","handleSearch","problemList","map","item","i","problemId","title","price","next","prev","_Fragment","numList","start"],"sourceRoot":""}