{"version":3,"file":"static/js/393.b21096b2.chunk.js","mappings":"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","sources":["components/cart/CartComponent.tsx","service/CartService.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport {CustomBanner, CustomBannerAside, CustomBannerBox} from \"../../Global.style\";\nimport {Link} from \"react-router-dom\";\nimport { MdCancel } from \"react-icons/md\";\nimport {useQuery} from \"react-query\";\nimport cartService from \"../../service/CartService\";\nimport {CloseCircleFilled} from \"@ant-design/icons\";\nimport memberRepository from \"../../repository/MemberRepository\";\nimport salesService from \"../../service/SalesService\";\nimport {message} from \"antd\";\nimport {SalesListDataTotalType, SalesListDataType} from \"../../types/SalesTypes\";\n\nfunction CartComponent() {\n    let totalPrice = 0;\n    let problemIdList:number[] = []\n    const memberId = memberRepository.getUserId();\n    const [clickCheck, setClickCheck] = useState<Boolean>(false)\n    const cartData = useQuery([clickCheck],async=>cartService.getList(memberId))\n    const cartList = cartData.data ? cartData.data : [];\n    for (let key in cartList){\n        totalPrice += cartList[key][1].price\n    }\n    const [messageApi, contextHolder] = message.useMessage();\n    const error = (content:string) => {\n        messageApi.open({\n            type: 'error',\n            content: `${content}`,\n            duration : 1,\n        });\n    };\n    const success = (content:string) => {\n        messageApi.open({\n            type: 'success',\n            content: `${content}`,\n            duration : 1,\n        });\n    };\n    const salesListData = {\n        problemIdList : problemIdList,\n        memberId : memberId,\n    }\n    const salesListTotalData = {\n        problemIdList : problemIdList,\n        totalPrice : totalPrice,\n        memberId : memberId,\n    }\n    const handleDeleteClick = (cartId : string) => {\n        cartService.delete(cartId, memberId).then((response)=>{\n            setClickCheck(!clickCheck)\n        })\n    }\n    const handleCheckPurchase = () => {\n        salesService.purchaseCheckAll(salesListData).then(response=>{\n            if (response===\"LIST_BLANK\"){\n                error(\"장바구니가 비어있습니다!\")\n            } else if(response === \"ALREADY_PURCHASED\"){\n                error(\"이미 구매한 상품이 있습니다!\")\n            } else if (response === \"SUCCESS\"){\n                handleClickPurchase(salesListTotalData)\n            }\n        })\n    }\n    const handleClickPurchase = (salesListData : SalesListDataTotalType) => {\n        salesService.purchaseAll(salesListData).then(response=>{\n            if(response===\"COIN_LACK\"){\n                error(\"코인이 부족합니다\")\n            } else if (response===\"SUCCESS\"){\n                success(\"답지 구매 완료\")\n                cartService.deleteAll(memberId).then(()=>window.location.reload())\n            }\n        })\n    }\n    return (\n        <>\n            {contextHolder}\n            <CustomBannerBox>\n                <CustomBanner>\n                    <Link to={\"/\"}><small>HOME</small></Link><br/><br/><br/>\n                    <p style={{fontSize:\"25px\"}}>장바구니</p>\n                </CustomBanner>\n                <CustomBannerAside>\n                </CustomBannerAside>\n            </CustomBannerBox>\n            <CartBox>\n                <CartTable>\n                    <CartThead >\n                        <tr>\n                            <th style={{width:\"200px\",textAlign:\"start\"}}>문제 명</th>\n                            <th style={{width:\"100px\"}}>가격</th>\n                            <th style={{width:\"100px\"}}>취소하기</th>\n                        </tr>\n                    </CartThead>\n                    <tbody style={{width:'100%',borderTop:\"solid 2px rgb(235,235,235)\",height:\"50px\"}}>\n                    {\n                        cartData.isLoading ? <></> :\n                            cartList.map((item:any,i:number)=>{\n                                problemIdList.push(item[1].problemId)\n                                return (\n                                    <tr key={i} style={{height: \"50px\"}}>\n                                        <td style={{width: \"200px\", textAlign: \"start\"}}>{item[1].title}</td>\n                                        <td style={{\n                                            width: \"80px\",\n                                            textAlign: \"center\",\n                                            color: \"rgb(236,88,81),\",\n                                            verticalAlign: \"middle\"\n                                        }}><strong>{item[1].price}C</strong></td>\n                                        <td style={{width: \"80px\", textAlign: \"center\", verticalAlign: \"middle\"}}>\n                                            <CancelIcon onClick={()=>handleDeleteClick(item[0].cartId)}>X</CancelIcon>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                    }\n                    </tbody>\n                </CartTable>\n            </CartBox>\n            <AsideBox>\n\n                <Aside>\n                    <div style={{width: \"90%\", margin: \"0 auto\"}}>\n                        <BorderBottom>\n                            <strong>구매 할 답지 합계</strong>\n                        </BorderBottom><br/><br/>\n                        <div style={{display: \"flex\"}}>\n                            <CustomDiv>\n                                합계\n                            </CustomDiv>\n                            <Cost>\n                                {totalPrice}C\n                            </Cost>\n                        </div>\n                        <br/><br/>\n                        <PurchaseButton onClick={handleCheckPurchase}>\n                            구매하기\n                        </PurchaseButton>\n                    </div>\n                </Aside>\n\n            </AsideBox>\n        </>\n    );\n}\nconst CartThead = styled.thead`\n    width: 100%;\n    height: 50px;\n    border-bottom: 2px solid rgb(235,235,235);\n`\nconst CancelIcon = styled.p`\n > #icon{\n    font-size: 40px;\n     width: 28px;\n     height: 28px;\n     border-radius: 200px;\n     color: #fff;\n     background-color: rgb(236,88,81);\n     cursor: pointer;\n     &:hover{\n         color: rgb(236,88,81);\n         background-color: #fff;\n     }\n    }\n`\nconst CartTable = styled.table`\n    width: 80%;\n    margin: 30px auto;\n    height: 100%;\n    //border: 1px solid rgb(235,235,235);\n`\nconst CartBox = styled.div`\n    width: 60%;\n    height: 100%;\n    float: left;\n    @media screen and (max-width : 975px) {\n        float: none;\n        width: 100%;\n    }\n`\nconst AsideBox = styled.aside`\n    width: 40%;\n    float: right;\n    height: 100%;\n    @media screen and (max-width : 975px) {\n        float: none;\n        width: 100%;\n    }\n`\nconst Aside = styled.div`\n    width: 80%;\n    margin: 30px auto;\n    border: solid 1px rgb(235,235,235);\n    height: 300px;\n`\nconst PurchaseButton = styled.button`\n    width: 100%;\n    height: 60px;\n    padding: 5px;\n    background-color: transparent;\n    color: rgb(150, 204, 210);\n    font-size: 16px;\n    font-weight: 500;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: all 0.3s ;\n    border: solid 2px rgb(150, 204, 210);\n    &:hover {\n        background-color: rgb(150, 204, 210);\n        color: #fff;\n    }\n`\nconst BorderBottom = styled.div`\n    width: 100%;\n    border-bottom: solid 2px rgb(235,235,235);\n    line-height: 80px;\n    text-align: center;\n    font-size: 20px;\n`\nconst CustomDiv = styled.div`\n    width: 50%;\n    height: 30px;\n    text-align: center;\n    font-size: 20px;\n`\nconst Cost = styled.div`\n    width: 50%;\n    height: 30px;\n    color: rgb(236,88,81);\n    font-weight: 550;\n    font-size: 20px;\n    text-align: center;\n`\nexport default CartComponent;","import jwtAxios from \"../util/jwtUtil\";\nimport {CartDataTypes} from \"../types/CartTypes\";\n\nconst host = `http://localhost:8080/mp/carts`\n\nclass CartService {\n\n    static register = async (cartData: CartDataTypes)=>{\n        const result = await jwtAxios.post(`${host}/register`,cartData)\n        return result.data;\n    }\n    static getList = async (memberId : string) => {\n        const result = await jwtAxios.get(`${host}?memberId=${memberId}`)\n        return result.data;\n    }\n    static delete = async (cartId : string,memberId : string) => {\n        const result = await jwtAxios.delete(`${host}/delete/${cartId}?memberId=${memberId}`)\n        return result.data;\n    }\n    static registerCheck = async (cartData: CartDataTypes)=> {\n        const result = await jwtAxios.post(`${host}/register-check`, cartData)\n        return result.data;\n    }\n    static deleteAll = async (memberId:string) => {\n        const result = await jwtAxios.delete(`${host}/delete/all?memberId=${memberId}`)\n        return result.data;\n    }\n\n}\nexport default CartService;"],"names":["CartThead","styled","thead","_templateObject","_taggedTemplateLiteral","CancelIcon","p","_templateObject2","CartTable","table","_templateObject3","CartBox","div","_templateObject4","AsideBox","aside","_templateObject5","Aside","_templateObject6","PurchaseButton","button","_templateObject7","BorderBottom","_templateObject8","CustomDiv","_templateObject9","Cost","_templateObject10","totalPrice","problemIdList","memberId","memberRepository","getUserId","clickCheck","setClickCheck","useState","cartData","useQuery","async","cartService","getList","cartList","data","key","price","messageApi","contextHolder","message","useMessage","error","content","open","type","concat","duration","salesListData","salesListTotalData","handleClickPurchase","salesService","purchaseAll","then","response","deleteAll","window","location","reload","_jsxs","_Fragment","children","CustomBannerBox","CustomBanner","_jsx","Link","to","style","fontSize","CustomBannerAside","width","textAlign","borderTop","height","isLoading","map","item","i","push","problemId","title","color","verticalAlign","onClick","handleDeleteClick","cartId","delete","margin","display","handleCheckPurchase","purchaseCheckAll","host","CartService","register","jwtAxios","post","get","registerCheck"],"sourceRoot":""}