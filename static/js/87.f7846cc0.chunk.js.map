{"version":3,"file":"static/js/87.f7846cc0.chunk.js","mappings":"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","sources":["components/member/LoginModal.tsx","components/Header.tsx","components/Layout.tsx","views/Home.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport styled from \"styled-components\";\nimport {IoClose} from \"react-icons/io5\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeIsLoginModalOpenFalse} from \"../../store/store\";\nimport {BlackBg} from \"../../Global.style\";\nimport {MemberLoginType} from \"../../types/MemberTypes\";\nimport memberService from \"../../service/MemberService\";\nimport { message} from \"antd\";\nimport {AppDispatch, RootState} from \"../../index\";\nimport {useNavigate} from \"react-router-dom\";\nimport memberRepository from \"../../repository/MemberRepository\";\nlet initState = {\n    username : \"\",\n    password : \"\"\n}\n\nfunction LoginModal() {\n    const navigate = useNavigate();\n    const dispatch = useDispatch<AppDispatch>();\n    const [messageApi, contextHolder] = message.useMessage();\n    const error = (content:string) => {\n        messageApi.open({\n            type: 'error',\n            content: `${content}`,\n            duration : 1,\n        });\n    };\n    const success = (content:string) => {\n        messageApi.open({\n            type: 'success',\n            content: `${content}`,\n            duration : 1,\n        });\n    };\n\n    const [loginData, setLoginData] = useState<MemberLoginType>(initState)\n    let isLoginModalOpen = useSelector((state:RootState)=>state.isLoginModalOpen)\n    const handleChange = (e:ChangeEvent<HTMLInputElement>):void => {\n        loginData[e.target.name] = e.target.value;\n        setLoginData({...loginData})\n    }\n    const login = () => {\n        memberService.login(loginData).then((response)=>{\n            if (response === \"Username_Blank\"){\n                error(\"이메일이 비어있습니다!\")\n                setLoginData(initState)\n            } else if(response === \"Password_Blank\"){\n                error(\"비밀번호를 채워주세요!\")\n            } else if (response.Message){\n                error(\"로그인에 실패했습니다!\")\n                setLoginData(initState)\n            } else {\n                success(\"로그인 성공!\")\n                memberRepository.saveUserData(response)\n                dispatch(changeIsLoginModalOpenFalse())\n                memberRepository.loginTrue()\n                window.location.reload()\n                setLoginData({\n                    username : \"\",\n                    password : \"\"\n                })\n            }\n        }).catch(()=>{\n            setLoginData(initState)\n            error(\"에러가 발생했습니다!\")})\n    }\n    return (\n        <>\n        <BlackBg className={`${isLoginModalOpen}`}>\n            {contextHolder}\n            <LoginModalBox>\n                <p style={{padding: \"25px 0px 0px 30px\"}}>로그인</p>\n                <div onClick={()=>{\n                    dispatch(changeIsLoginModalOpenFalse())\n                }} >\n                    <IoClose style={{\n                        fontSize: \"30px\",\n                        position: \"absolute\",\n                        bottom: \"0px\",\n                        width : \"30px\",\n                        height: \"30px\",\n                        left : \"290px\",\n                        fontWeight: \"bolder\",\n                        cursor: \"pointer\",\n                        zIndex : \"10\"\n                    }}/>\n                </div>\n                <LoginCenterBox>\n                    <LoginEmailInputBox name={\"username\"} type={\"email\"} onChange={handleChange} value={loginData.username}\n                                        placeholder={\"이메일\"} required={true}/>\n                    <LoginPasswordInputBox name={\"password\"} placeholder={\"비밀번호\"} value={loginData.password}\n                                           type={\"password\"} onChange={handleChange} required={true}/>\n                </LoginCenterBox>\n                <LoginButton onClick={login}>로그인</LoginButton>\n                <GoToRegisterButton onClick={() => {\n                    navigate(\"/members/register\")\n                    dispatch(changeIsLoginModalOpenFalse())\n                }}>회원가입</GoToRegisterButton>\n                <LoginCancelButton>게스트 로그인</LoginCancelButton>\n            </LoginModalBox>\n        </BlackBg>\n        </>\n    );\n}\nconst LoginModalBox = styled.div`\n    width: 350px;\n    height: 350px;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    background-color: #fff;\n    margin: 100px auto;\n    font-size: 20px;\n    right: 0;\n    left: 0;\n    font-weight: 500;\n    color: #424242;\n    z-index: 200;\n    position: fixed;\n`\nconst LoginEmailInputBox = styled.input`\n    height: 30px;\n    border: none;\n    width: 80%;\n    padding: 15px 0 0 10px;\n    margin-left: 20px ;\n    margin-top: 20px;\n    border-bottom: 2px solid rgb(238,238,238);\n    font-size: 16px;\n    &:focus {\n        outline: none;\n        border-bottom: solid 2px rgb(138,198,205);\n    }\n`\nconst LoginPasswordInputBox = styled.input`\n    height: 30px;\n    border: none;\n    width: 80%;\n    padding: 0 0 0 10px;\n    margin-left: 20px ;\n    margin-top: 20px;\n    border-bottom: 2px solid rgb(238,238,238);\n    font-size: 16px;\n    &:focus {\n        outline: none;\n        border-bottom: solid 2px rgb(138,198,205);\n    }\n`\nconst LoginButton = styled.button`\n    width: 100%;\n    height: 50px;\n    margin-top: 40px;\n    border: none;\n    background-color: rgb(141,206,184);\n    cursor: pointer;\n    color: #fff;\n    font-size: 15px;\n    font-weight: 500;\n`\nconst GoToRegisterButton  = styled.button`\n    width: 100%;\n    height: 50px;\n    border: none;\n    cursor: pointer;\n    color: #fff;\n    font-size: 15px;\n    font-weight: 500;\n    background-color: rgb(77,77,77);\n`\nexport const LoginCenterBox = styled.div`\n    margin: 0 auto;\n    width: 330px;\n`\nexport const LoginCancelButton = styled.button`\n    width: 100%;\n    height: 50px;\n    border: none;\n    cursor: pointer;\n    color: #fff;\n    font-size: 15px;\n    font-weight: 500;\n    background-color: rgb(108, 93, 93);\n`\nexport default LoginModal;","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Twirl as Hamburger} from 'hamburger-react'\nimport {AppDispatch, RootState} from \"../index\";\nimport {AiOutlineSearch, AiOutlineShoppingCart} from \"react-icons/ai\";\nimport {IoClose} from \"react-icons/io5\";\nimport {useNavigate} from \"react-router-dom\";\nimport {changeIsLoginModalOpenTrue, changeIsNavOpenFalse, changeIsNavOpenTrue} from \"../store/store\";\nimport LoginModal from \"./member/LoginModal\";\nimport memberService from \"../service/MemberService\";\nimport {useQuery} from \"react-query\";\nimport memberRepository from \"../repository/MemberRepository\";\n\nfunction Header() {\n    // 변수 선언\n    const dispatch = useDispatch<AppDispatch>();\n    const navigate = useNavigate();\n    const navOpen : string = useSelector((state:RootState)=>{return state.isNavOpen})\n    const [isOpen, setOpen] = useState(false)\n    const loginResult = useQuery([memberRepository.getLoginCheck()],memberService.loginCheck)\n    const check = loginResult.data\n    const doLogout = () => {\n        memberService.logout()\n        memberRepository.loginFalse()\n        window.location.reload();\n    }\n\n    return (\n        <>\n            <CustomHeader className={`${navOpen}`}>\n                <LogoBox>\n                    <h2>Logo</h2>\n                </LogoBox>\n                <BlankBox/>\n                <HeaderContentsBox>\n                    <HeaderContents id={\"korean\"} onClick={()=>{\n                        navigate(\"/problems/korean/1\")\n                    }}>\n                        <p>국어</p>\n                    </HeaderContents>\n                    <HeaderContents id={\"math\"} onClick={()=>{\n                        navigate(\"/problems/math/1\")\n                    }}>\n                        <p>수학</p>\n                    </HeaderContents>\n                    <HeaderContents id={\"english\"} onClick={() => {\n                        navigate(\"/problems/english/1\")\n                    }}>\n                        <p>영어</p>\n                    </HeaderContents>\n                    <HeaderContents id={\"social\"} onClick={() => {\n                        navigate(\"/problems/social/1\")\n                    }}>\n                        <p>사탐</p>\n                    </HeaderContents>\n                    <HeaderContents id={\"science\"} onClick={() => {\n                        navigate(\"/problems/science/1\")\n                    }}>\n                        <p>과탐</p>\n                    </HeaderContents>\n                </HeaderContentsBox>\n                <HeaderEndBox>\n                    <HeaderEndContents/>\n                    {\n                        !check  ?\n                            <>\n                                <HeaderEndContents onClick={()=>{\n                                    dispatch(changeIsLoginModalOpenTrue())\n                                }}>\n                                    login\n                                </HeaderEndContents>\n                            </> :\n                            <>\n                                <HeaderEndContents onClick={()=>{\n                                    navigate(\"/members/mypage\")\n                                }}>\n                                    mypage\n                                </HeaderEndContents>\n                                <HeaderEndContents onClick={doLogout}>\n                                    logout\n                                </HeaderEndContents>\n                            </>\n                    }\n                    <HeaderEndContents>\n                        <AiOutlineShoppingCart\n                            onClick={()=>{\n                                navigate(\"/cart\")\n                            }}\n                            style={{fontSize: \"23px\", marginTop: \"27px\", fontWeight: \"200\"}}/>\n                    </HeaderEndContents>\n                    <HeaderEndIcon onClick={() => {\n                        if (!isOpen) {\n                            dispatch(changeIsNavOpenTrue())\n                            setOpen(true)\n                        } else {\n                            dispatch(changeIsNavOpenFalse())\n                            setOpen(false)\n                        }\n                    }} style={{fontSize: \"25px\", marginTop: \"14px\"}}>\n                        <Hamburger size={23} toggled={isOpen} toggle={setOpen}/>\n                    </HeaderEndIcon>\n                </HeaderEndBox>\n            </CustomHeader>\n            <HeaderSideBox>\n                <NavSideCloseIconBox>\n                    <IoClose onClick={()=>{\n                        setOpen(false)\n                        dispatch(changeIsNavOpenFalse())\n                    }} style={{fontSize: \"80px\", fontWeight: \"bolder\", cursor: \"pointer\"}}/>\n                </NavSideCloseIconBox>\n                <NavSideContentsSearchBox>\n                    <CenterBox >\n                        <AiOutlineSearch\n                            onClick={()=>{\n                                dispatch(changeIsNavOpenTrue())\n                            }}\n                            style={{fontSize: \"27px\", fontWeight: \"bolder\", marginTop: \"10px\", cursor: \"pointer\"}}/>\n                    </CenterBox>\n                </NavSideContentsSearchBox>\n                <NavSideContents onClick={()=>{\n                    navigate(\"/problems/korean/1\")\n                }} style={{marginTop: \"5px\"}}>국어</NavSideContents>\n                <NavSideContents onClick={()=>{\n                    navigate(\"/problems/math/1\")\n                }}>수학 </NavSideContents>\n                <NavSideContents onClick={()=>{\n                    navigate(\"/problems/english/1\")\n                }}>영어 </NavSideContents>\n                <NavSideContents onClick={()=>{\n                    navigate(\"/problems/social/1\")\n                }}>사회 탐구</NavSideContents>\n                <NavSideContents onClick={()=>{\n                    navigate(\"/problems/science/1\")\n                }}>과학 탐구</NavSideContents>\n            </HeaderSideBox>\n            {/*로그인 폼 모달*/}\n            <LoginModal/>\n        </>\n    );\n}\nconst CustomHeader = styled.header`\n    width: 100%;\n    height: 80px;\n    display: flex;\n    border-bottom: solid 2px rgb(235, 235, 235);\n    border-right: 2px solid rgb(235,235,235) ;\n    background-color: #fff;\n    z-index: 5;\n    transition: all 0.5s;\n`\nconst LogoBox = styled.div`\n    width: 20%;\n    height: 100%;\n    text-align: center;\n    line-height: 80px;\n`\nconst CenterBox = styled.div`\n    width: 50px;\n    margin: 0 auto;\n`\nconst BlankBox = styled.div`\n    width: 30%;\n    height: 100%;\n    @media screen and (max-width: 975px) {\n        width: 45%;\n    }\n    @media screen and (max-width: 600px) {\n        width: 20%;\n    }\n`\nconst HeaderContentsBox = styled.div`\n    display: flex;\n    width: 30%;\n    height: 100%;\n    @media screen and (max-width: 975px) {\n        display: none;\n    }\n`\nconst HeaderContents = styled.div`\n    width: 20%;\n    height: 100%;\n    text-align: center;\n    cursor: pointer;\n    line-height: 80px;\n    color: rgb(121, 121, 121);\n    font-weight: 400;\n    font-size: 14px;\n    &:hover {\n        border-bottom: solid 2px rgb(69, 136, 245);\n        color: rgb(69, 136, 245);\n    }\n`\nconst HeaderEndBox = styled.div`\n    display: flex;\n    width: 20%;\n    height: 100%;\n    line-height: 80px;\n    @media screen and (max-width: 975px) {\n        width: 30%;\n    }\n    @media screen and (max-width: 600px) {\n        width: 50%;\n    }\n`\nconst HeaderEndContents = styled.div`\n    width: 30%;\n    height: 100%;\n    text-align: center;\n    cursor: pointer;\n    font-size: 16px;\n    color: rgb(88, 88, 88);\n    font-weight: 550;\n    word-wrap: break-word;\n    &:hover {\n        color: rgb(69, 136, 245);\n        font-weight: bolder;\n    }\n`\nconst HeaderEndIcon = styled.div`\n    width: 20%;\n    height: 100%;\n    text-align: center;\n    display: none;\n    @media screen and (max-width: 975px) {\n        display: block;\n    }\n    @media screen and (max-width: 725px) {\n        width: 10%;\n    }\n`\nconst HeaderSideBox = styled.aside`\n    width: 200px;\n    //height: 100%;\n    top: 0;\n    right: 0;\n    position: fixed;\n    background-color: #fff;\n    transition: all 0.5s;\n    z-index: 1;\n    border-left: 5px solid rgb(235,235,235) ;\n`\nconst NavSideCloseIconBox = styled.div`\n    width: 100px;\n    margin: 5px auto;\n`\nconst NavSideContentsSearchBox = styled.div`\n    width: 100%;\n    background-color: rgb(235,235,235);\n    border: solid 1px rgb(245,245,245);\n    height: 50px;\n`\nconst NavSideContents = styled.div`\n    width: 100%;\n    border: solid 1px rgb(245,245,245);\n    height: 50px;\n    cursor: pointer;\n    line-height: 50px;\n    font-size: 20px;\n    color: #424242;\n    box-sizing: border-box;\n    padding: 0 40px;\n    font-weight: 500;\n`\nexport default Header;","import React, {ReactNode} from 'react';\nimport Header from \"./Header\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../index\";\n\nfunction Layout({ children }: { children: ReactNode }) {\n    let navOpen : string = useSelector((state :RootState)=>{return state.isNavOpen})\n\n    return (\n        <>\n            <Header/>\n            <main className={`${navOpen}`}>{children}</main>\n        </>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport {Outlet} from \"react-router-dom\";\nimport Layout from \"../components/Layout\";\n\nfunction Home() {\n    return (\n        <Layout>\n            <Outlet/>\n        </Layout>\n    );\n}\n\nexport default Home;"],"names":["initState","username","password","LoginModalBox","styled","div","_templateObject","_taggedTemplateLiteral","LoginEmailInputBox","input","_templateObject2","LoginPasswordInputBox","_templateObject3","LoginButton","button","_templateObject4","GoToRegisterButton","_templateObject5","LoginCenterBox","_templateObject6","LoginCancelButton","_templateObject7","navigate","useNavigate","dispatch","useDispatch","messageApi","contextHolder","message","useMessage","error","content","open","type","concat","duration","loginData","setLoginData","useState","isLoginModalOpen","useSelector","state","handleChange","e","target","name","value","_jsx","_Fragment","children","_jsxs","BlackBg","className","style","padding","onClick","changeIsLoginModalOpenFalse","IoClose","fontSize","position","bottom","width","height","left","fontWeight","cursor","zIndex","onChange","placeholder","required","login","memberService","then","response","Message","memberRepository","saveUserData","loginTrue","window","location","reload","catch","CustomHeader","header","LogoBox","CenterBox","BlankBox","HeaderContentsBox","HeaderContents","HeaderEndBox","HeaderEndContents","_templateObject8","HeaderEndIcon","_templateObject9","HeaderSideBox","aside","_templateObject10","NavSideCloseIconBox","_templateObject11","NavSideContentsSearchBox","_templateObject12","NavSideContents","_templateObject13","navOpen","isNavOpen","isOpen","setOpen","check","useQuery","getLoginCheck","loginCheck","data","id","doLogout","logout","loginFalse","changeIsLoginModalOpenTrue","AiOutlineShoppingCart","marginTop","changeIsNavOpenFalse","changeIsNavOpenTrue","Hamburger","size","toggled","toggle","AiOutlineSearch","LoginModal","_ref","Header","Layout","Outlet"],"sourceRoot":""}